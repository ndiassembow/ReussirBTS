flutter devices
flutter config --enable-web
flutter build web --release
firebase --version
npm install -g firebase-tools
firebase login
firebase init hosting
   √ Are you ready to proceed? Yes
   √ What do you want to use as your public directory? build/web
   √ Configure as a single-page app (rewrite all urls to /index.html)? Yes
   √ Set up automatic builds and deploys with GitHub? No
   √ File build/web/index.html already exists. Overwrite? No
flutter build web --release
firebase deploy --only hosting

Compiler et déployer ton app Flutter Web
Chaque fois que tu modifies ton code Flutter :
flutter build web --release # Compile → build/web
firebase deploy # Déploie sur Firebase Hosting
→ Ton site est mis à jour à l’adresse : https://reussirbts.web.app

Mettre ton projet Flutter sur GitHub
a) Initialisation
cd "/c/Users/unchk/Desktop/ALL/MEMOIRE/\_\_ENV_Flutter/reussirbts"
git init
git remote add origin https://github.com/ndiassembow/ReussirBTS.git
b) Configurer ton identité (une seule fois)
git config --global user.name "ndiassembow"
git config --global user.email "tonEmailGitHub@exemple.com"
c) Ignorer les fichiers sensibles (.gitignore)
À la racine du projet (là où est .git), crée ou édite .gitignore :
# Firebase credentials
lib/firebase-import/serviceAccountKey.json
# Flutter / Dart
build/
.dart_tool/
.packages
.pub/
.idea/
.vscode/
Vérifie :
git check-ignore -v lib/firebase-import/serviceAccountKey.json
d) Retirer du suivi Git le fichier secret
git rm --cached lib/firebase-import/serviceAccountKey.json
git add .gitignore
git commit -m "Remove Firebase key + add .gitignore"
e) Nettoyer l’historique si le secret a déjà été commité
Installer git-filter-repo si nécessaire puis :
git filter-repo --path lib/firebase-import/serviceAccountKey.json --invert-paths
f) Envoyer sur GitHub
git branch -M main
git push -u origin main --force
Ton code est maintenant sur GitHub sans la clé.

Gestion des clés Firebase
serviceAccountKey.json reste en local, jamais sur GitHub.
Sinon, utiliser des variables d’environnement.
Si elle a déjà fuité, révoque et recrée la clé dans Google Cloud.

Commandes Flutter utiles
flutter run -d chrome → tester en local.
flutter run -d chrome --release → tester version optimisée.
flutter run -d web-server → serveur web local.
⚡️ Workflow résumé
Code → modifie ton app Flutter.
Build → flutter build web --release.
Deploy → firebase deploy.
GitHub → git add ., git commit -m "... ", git push.
Clés sensibles → dans .gitignore, jamais commitées.